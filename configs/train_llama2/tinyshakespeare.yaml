__include__: ['base_config.yaml']

general:
  project_name: 'llama2_tinyshakespeare'

model:
  module: 'nanugpt.models.tinyllama.get_model'
  module_kwargs:
    n_layer: 6
    n_embd: 384
    n_head: 6
    context_length: 256

data:
  module_kwargs:
    tokenized_train_path: '$DATA_ROOT/tokenized/tinyshakespeare/byte/train.bin'
    tokenized_val_path: '$DATA_ROOT/tokenized/tinyshakespeare/byte/val.bin'
    eval_batch_size: 64

tokenizer:
  _inherit: false # remove base config's settings
  module: 'nanugpt.tokenizers.byte_tokenizer.get_tokenizer_factory'
  module_kwargs:
    encoding_name: 'utf-8'

training:
  device_batch_size: 64
  max_steps: 1000  # Karpathy's original value is 5000 but dataset overfits after 2300 steps
  global_batch_size: 64

optimizer:
  module: 'nanugpt.optimizers.adamw_nanogpt.get_optim'
  module_kwargs:
    learning_rate: 20.0E-4 # LRRT found 2.5E-3, Karpathy used 1.0E-3
    weight_decay: 0.1
    beta1: 0.9
    beta2: 0.99

scheduler:
  module: 'nanugpt.schedulers.linear.get_scheduler'
  module_kwargs:
    warmup_iters: 40
    max_iters: '_copy: /training/max_steps'
    end_factor: 1.0E-2

eval:
  eval_every: 250
  eval_iters: 200 # number of samples to evaluate for dataset
  save_checkpoint: false
  checkoint_after: 0 # starts saving checkpoint after these steps
  checkpoint_every_hr: 1 # multiple of eval_every, save checkpoint after these steps from last checkpoint when val loss is better
  checkpoint_keep_best: false # keep only the best checkpoint, otherwise keep all with  _{step}.pt
